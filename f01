*---------------------------------------------------------------------*
* Check status - FINAL (Accurate datetime range + dedup + JCDS/CDHDR)
*---------------------------------------------------------------------*
FORM f_check_status USING ps_order TYPE viaufkst.

  DATA: lv_obj           TYPE cuobj,
        lv_value         TYPE atwrt,
        lv_stat          TYPE jest-stat,
        lv_date          TYPE udate,
        lv_time          TYPE utime,
        lv_objid         TYPE c LENGTH 20,
        lv_inact         TYPE jest-inact,
        lv_vornr         TYPE vornr,
        lv_rel_active    TYPE abap_bool VALUE abap_false,
        lv_teco_active   TYPE abap_bool VALUE abap_false,
        lv_locked_active TYPE abap_bool VALUE abap_false,
        lv_chg_date      TYPE udate,
        lv_chg_time      TYPE utime,
        lv_sts_date      TYPE udate,
        lv_sts_time      TYPE utime,
        lv_recent_date   TYPE udate,
        lv_recent_time   TYPE utime,
        lv_recent_ts     TYPE p LENGTH 14,
        lv_from_ts       TYPE p LENGTH 14.

  "---------------------------------------------------
  " Prevent duplicate ALV entries for same order
  "---------------------------------------------------
  READ TABLE gt_output WITH KEY MaintenanceOrder = ps_order-aufnr TRANSPORTING NO FIELDS.
  IF sy-subrc = 0.
    RETURN. " Already processed
  ENDIF.

  "---------------------------------------------------
  " Classification object (equipment or location)
  "---------------------------------------------------
  CLEAR lv_obj.
  IF ps_order-equnr IS NOT INITIAL.
    SELECT SINGLE cuobj INTO lv_obj FROM inob WHERE objek = ps_order-equnr.
  ENDIF.
  IF lv_obj IS INITIAL AND ps_order-tplnr IS NOT INITIAL.
    SELECT SINGLE cuobj INTO lv_obj FROM inob WHERE objek = ps_order-tplnr.
  ENDIF.
  IF lv_obj IS INITIAL.
    RETURN.
  ENDIF.

  "---------------------------------------------------
  " Step 1: Check REL / TECO active
  "---------------------------------------------------
  SELECT SINGLE stat FROM jest INTO lv_stat
    WHERE objnr = ps_order-objnr AND stat = 'I0002' AND inact = ''.
  IF sy-subrc = 0. lv_rel_active = abap_true. ENDIF.

  SELECT SINGLE stat FROM jest INTO lv_stat
    WHERE objnr = ps_order-objnr AND stat = 'I0045' AND inact = ''.
  IF sy-subrc = 0. lv_teco_active = abap_true. ENDIF.

  IF lv_rel_active = abap_false AND lv_teco_active = abap_false.
    RETURN. " Skip if not REL or TECO
  ENDIF.

  "---------------------------------------------------
  " Step 2: Check INTERFACE = CMX
  "---------------------------------------------------
  SELECT SINGLE atwrt INTO lv_value
    FROM ausp
   WHERE objek = lv_obj AND atinn = gv_atinn.
  IF sy-subrc <> 0 OR lv_value <> 'CMX'.
    RETURN.
  ENDIF.

  "---------------------------------------------------
  " Step 3: Check lock status (I0043 active = locked)
  "---------------------------------------------------
  SELECT SINGLE inact FROM jest INTO lv_inact
    WHERE objnr = ps_order-objnr AND stat = 'I0043'.
  IF sy-subrc = 0 AND lv_inact IS INITIAL.
    lv_locked_active = abap_true.
  ENDIF.

  "---------------------------------------------------
  " Step 4: Latest data change (CDHDR)
  "---------------------------------------------------
  CONCATENATE sy-mandt '30' ps_order-aufnr INTO lv_objid.
  SELECT MAX( udate ) AS max_date,
         MAX( utime ) AS max_time
    INTO ( lv_chg_date, lv_chg_time )
    FROM cdhdr
   WHERE objectclas = 'ORDER'
     AND objectid   = lv_objid.

  "---------------------------------------------------
  " Step 5: Latest status change (JCDS)
  "---------------------------------------------------
  SELECT MAX( udate ) AS max_date,
         MAX( utime ) AS max_time
    INTO ( lv_sts_date, lv_sts_time )
    FROM jcds
   WHERE objnr = ps_order-objnr
     AND stat IN ( 'I0043', 'I0045', 'I0002' ). " LKD, TECO, REL

  "---------------------------------------------------
  " Step 6: Determine most recent change (data vs status)
  "---------------------------------------------------
  lv_recent_date = lv_chg_date.
  lv_recent_time = lv_chg_time.

  IF lv_sts_date > lv_recent_date OR
     ( lv_sts_date = lv_recent_date AND lv_sts_time > lv_recent_time ).
    lv_recent_date = lv_sts_date.
    lv_recent_time = lv_sts_time.
  ENDIF.

  "---------------------------------------------------
  " Step 7: Accurate date-time filtering (timestamp compare)
  "---------------------------------------------------
  CONCATENATE lv_recent_date lv_recent_time INTO lv_recent_ts.
  CONCATENATE so_date-low    so_time-low    INTO lv_from_ts.

  IF lv_recent_ts < lv_from_ts.
    RETURN. " Skip older than Check From range
  ENDIF.

  "---------------------------------------------------
  " Step 8: Determine next action
  "---------------------------------------------------
  PERFORM f_get_operation USING ps_order CHANGING lv_vornr.

  IF lv_locked_active = abap_true.
    lv_stat = 'I0043'.
    PERFORM f_prepare_output USING ps_order lv_vornr lv_stat.
    gs_output-Msg = 'Locked â€“ not sent to CMX'.
    APPEND gs_output TO gt_output.
    RETURN.
  ENDIF.

  IF lv_teco_active = abap_true.
    lv_stat = 'I0045'.
    PERFORM f_prepare_output USING ps_order lv_vornr lv_stat.
    RETURN.
  ENDIF.

  lv_stat = 'I0002'. " REL or unlocked
  PERFORM f_prepare_output USING ps_order lv_vornr lv_stat.

ENDFORM.