*---------------------------------------------------------------------*
* Check status - Final version based on funct.pdf (Step 5)
*---------------------------------------------------------------------*
FORM f_check_status USING ps_order TYPE viaufkst.

  DATA: lv_obj           TYPE cuobj,
        lv_value         TYPE atwrt,
        lv_stat          TYPE jest-stat,
        lv_date          TYPE udate,
        lv_time          TYPE utime,
        lv_objid         TYPE c LENGTH 20,
        lv_inact         TYPE jest-inact,
        lv_vornr         TYPE vornr,
        lv_rel_active    TYPE abap_bool VALUE abap_false,
        lv_teco_active   TYPE abap_bool VALUE abap_false,
        lv_locked_active TYPE abap_bool VALUE abap_false.

  "---------------------------------------------------
  " Classification object (equipment or functional location)
  "---------------------------------------------------
  IF ps_order-equnr IS NOT INITIAL.
    SELECT SINGLE cuobj INTO lv_obj FROM inob WHERE objek = ps_order-equnr.
  ELSE.
    SELECT SINGLE cuobj INTO lv_obj FROM inob WHERE objek = ps_order-tplnr.
  ENDIF.

  IF lv_obj IS INITIAL.
    RETURN.
  ENDIF.

  "---------------------------------------------------
  " Step 1: Check REL / TECO
  "---------------------------------------------------
  SELECT SINGLE stat FROM jest INTO lv_stat
    WHERE objnr = ps_order-objnr AND stat = 'I0002' AND inact = ''.
  IF sy-subrc = 0. lv_rel_active = abap_true. ENDIF.

  SELECT SINGLE stat FROM jest INTO lv_stat
    WHERE objnr = ps_order-objnr AND stat = 'I0045' AND inact = ''.
  IF sy-subrc = 0. lv_teco_active = abap_true. ENDIF.

  IF lv_rel_active = abap_false AND lv_teco_active = abap_false.
    RETURN. " Not eligible
  ENDIF.

  "---------------------------------------------------
  " Step 2: Check INTERFACE = CMX
  "---------------------------------------------------
  SELECT SINGLE atwrt INTO lv_value
    FROM ausp
   WHERE objek = lv_obj AND atinn = gv_atinn.
  IF sy-subrc <> 0 OR lv_value <> 'CMX'.
    RETURN.
  ENDIF.

  "---------------------------------------------------
  " Step 3: Check lock status (I0043)
  "---------------------------------------------------
  SELECT SINGLE inact FROM jest INTO lv_inact
    WHERE objnr = ps_order-objnr AND stat = 'I0043'.
  IF sy-subrc = 0 AND lv_inact IS INITIAL.
    lv_locked_active = abap_true.
  ENDIF.

  "---------------------------------------------------
  " Step 4: Get latest ORDER change timestamp (CDHDR)
  "---------------------------------------------------
  CONCATENATE sy-mandt '30' ps_order-aufnr INTO lv_objid.
  SELECT MAX( udate ) AS max_date
         MAX( utime ) AS max_time
    INTO ( lv_date, lv_time )
    FROM cdhdr
   WHERE objectclas = 'ORDER' AND objectid = lv_objid.

  IF lv_date IS INITIAL.
    RETURN. " no change record at all
  ENDIF.

  "---------------------------------------------------
  " Step 5 (from funct): compare vs selection parameters
  "---------------------------------------------------
  IF ( lv_date < so_date-low ) OR
     ( lv_date = so_date-low AND lv_time < so_time-low ).
    RETURN. " no change within check window
  ENDIF.

  "---------------------------------------------------
  " Step 6: Determine which orders to send
  "---------------------------------------------------
  PERFORM f_get_operation USING ps_order CHANGING lv_vornr.

  " Locked, REL, or TECO all valid for ALV & CMX send
  IF lv_locked_active = abap_true.
    lv_stat = 'I0043'. " Locked
  ELSEIF lv_teco_active = abap_true.
    lv_stat = 'I0045'. " TECO
  ELSE.
    lv_stat = 'I0002'. " REL
  ENDIF.

  "---------------------------------------------------
  " Step 7: Prepare output (will be sent to CMX)
  "---------------------------------------------------
  PERFORM f_prepare_output USING ps_order lv_vornr lv_stat.

ENDFORM.