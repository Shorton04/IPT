FORM display_alv.

  DATA: lv_title     TYPE lvc_title,
        lo_columns   TYPE REF TO cl_salv_columns_table,
        lo_column    TYPE REF TO cl_salv_column_table,
        lo_functions TYPE REF TO cl_salv_functions_list.

  IF lt_alv_display IS INITIAL.
    MESSAGE 'No data to display.' TYPE 'I'.
    RETURN.
  ENDIF.

  TRY.
      " Create SALV table
      cl_salv_table=>factory(
        IMPORTING
          r_salv_table = lo_alv
        CHANGING
          t_table      = lt_alv_display ).

      " --- Set a simple title
      lv_title = |Report { sy-repid } - ALV Output|.
      lo_alv->set_screen_title( lv_title ).

      " --- Get column settings
      lo_columns = lo_alv->get_columns( ).
      lo_columns->set_optimize( abap_true ).

      " --- Optional: Rename 'BETR1' column
      TRY.
          lo_column = lo_columns->get_column( 'BETR1' ).
          lo_column->set_short_text( 'Amount' ).
          lo_column->set_medium_text( 'Amount' ).
          lo_column->set_long_text( 'Amount in Local Currency' ).
      CATCH cx_salv_not_found.
      ENDTRY.

      " --- Enable ALV standard toolbar functions
      lo_functions = lo_alv->get_functions( ).
      lo_functions->set_all( abap_true ).

      " --- Finally display the ALV
      lo_alv->display( ).

    CATCH cx_salv_msg INTO DATA(lx).
      MESSAGE lx->get_text( ) TYPE 'E'.
    CATCH cx_root INTO DATA(lx2).
      MESSAGE lx2->get_text( ) TYPE 'E'.
  ENDTRY.

ENDFORM.