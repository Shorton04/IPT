*---------------------------------------------------------------------*
* Check status - FINAL (CDHDR + JCDS + Unlock + LKD in ALV + No Duplicates)
*---------------------------------------------------------------------*
FORM f_check_status USING ps_order TYPE viaufkst.

  DATA: lv_obj           TYPE cuobj,
        lv_value         TYPE atwrt,
        lv_stat          TYPE jest-stat,
        lv_date          TYPE udate,
        lv_time          TYPE utime,
        lv_objid         TYPE c LENGTH 20,
        lv_inact         TYPE jest-inact,
        lv_vornr         TYPE vornr,
        lv_rel_active    TYPE abap_bool VALUE abap_false,
        lv_teco_active   TYPE abap_bool VALUE abap_false,
        lv_locked_active TYPE abap_bool VALUE abap_false,
        lv_chg_date      TYPE udate,
        lv_chg_time      TYPE utime,
        lv_sts_date      TYPE udate,
        lv_sts_time      TYPE utime,
        lv_recent_date   TYPE udate,
        lv_recent_time   TYPE utime.

  "---------------------------------------------------
  " Classification object (equipment or location)
  "---------------------------------------------------
  IF ps_order-equnr IS NOT INITIAL.
    SELECT SINGLE cuobj INTO lv_obj FROM inob WHERE objek = ps_order-equnr.
  ELSE.
    SELECT SINGLE cuobj INTO lv_obj FROM inob WHERE objek = ps_order-tplnr.
  ENDIF.
  IF lv_obj IS INITIAL.
    RETURN.
  ENDIF.

  "---------------------------------------------------
  " Step 1: Check REL / TECO active
  "---------------------------------------------------
  SELECT SINGLE stat FROM jest INTO lv_stat
    WHERE objnr = ps_order-objnr AND stat = 'I0002' AND inact = ''.
  IF sy-subrc = 0. lv_rel_active = abap_true. ENDIF.

  SELECT SINGLE stat FROM jest INTO lv_stat
    WHERE objnr = ps_order-objnr AND stat = 'I0045' AND inact = ''.
  IF sy-subrc = 0. lv_teco_active = abap_true. ENDIF.

  IF lv_rel_active = abap_false AND lv_teco_active = abap_false.
    RETURN. " Skip orders that are not REL or TECO
  ENDIF.

  "---------------------------------------------------
  " Step 2: Check INTERFACE characteristic = CMX
  "---------------------------------------------------
  SELECT SINGLE atwrt INTO lv_value
    FROM ausp
   WHERE objek = lv_obj AND atinn = gv_atinn.
  IF sy-subrc <> 0 OR lv_value <> 'CMX'.
    RETURN.
  ENDIF.

  "---------------------------------------------------
  " Step 3: Check lock status (I0043 active = locked)
  "---------------------------------------------------
  SELECT SINGLE inact FROM jest INTO lv_inact
    WHERE objnr = ps_order-objnr AND stat = 'I0043'.
  IF sy-subrc = 0 AND lv_inact IS INITIAL.
    lv_locked_active = abap_true.
  ENDIF.

  "---------------------------------------------------
  " Step 4: Latest data change (CDHDR)
  "---------------------------------------------------
  CONCATENATE sy-mandt '30' ps_order-aufnr INTO lv_objid.
  SELECT MAX( udate ) AS max_date,
         MAX( utime ) AS max_time
    INTO ( lv_chg_date, lv_chg_time )
    FROM cdhdr
   WHERE objectclas = 'ORDER'
     AND objectid   = lv_objid.

  "---------------------------------------------------
  " Step 5: Latest status change (JCDS - including unlocks)
  "---------------------------------------------------
  SELECT MAX( udate ) AS max_date,
         MAX( utime ) AS max_time
    INTO ( lv_sts_date, lv_sts_time )
    FROM jcds
   WHERE objnr = ps_order-objnr
     AND stat IN ( 'I0043', 'I0045', 'I0002' ). " LKD, TECO, REL (active or inactive)

  "---------------------------------------------------
  " Step 6: Determine latest activity (data or status)
  "---------------------------------------------------
  lv_recent_date = lv_chg_date.
  lv_recent_time = lv_chg_time.

  IF lv_sts_date > lv_recent_date OR
     ( lv_sts_date = lv_recent_date AND lv_sts_time > lv_recent_time ).
    lv_recent_date = lv_sts_date.
    lv_recent_time = lv_sts_time.
  ENDIF.

  "---------------------------------------------------
  " Step 7: Compare vs input date/time (so_date & so_time)
  "---------------------------------------------------
  IF ( lv_recent_date < so_date-low ) OR
     ( lv_recent_date = so_date-low AND lv_recent_time < so_time-low ).
    RETURN. " No change since last check
  ENDIF.

  "---------------------------------------------------
  " Step 8: Determine next action (deduped ALV)
  "---------------------------------------------------
  PERFORM f_get_operation USING ps_order CHANGING lv_vornr.

  " Avoid duplicate ALV entries (same MaintenanceOrder)
  READ TABLE gt_output WITH KEY MaintenanceOrder = ps_order-aufnr TRANSPORTING NO FIELDS.
  IF sy-subrc = 0.
    RETURN. " Already added, skip duplicate
  ENDIF.

  "---------------------------------------------------
  " Locked orders → show only, do not send
  "---------------------------------------------------
  IF lv_locked_active = abap_true.
    lv_stat = 'I0043'. " Locked
    PERFORM f_prepare_output USING ps_order lv_vornr lv_stat.
    gs_output-Msg = 'Locked – not sent to CMX'.
    APPEND gs_output TO gt_output.
    RETURN.
  ENDIF.

  "---------------------------------------------------
  " TECO → show and send
  "---------------------------------------------------
  IF lv_teco_active = abap_true.
    lv_stat = 'I0045'. " TECO
    PERFORM f_prepare_output USING ps_order lv_vornr lv_stat.
    RETURN.
  ENDIF.

  "---------------------------------------------------
  " REL / UNLOCKED / CHANGED → show and send
  "---------------------------------------------------
  lv_stat = 'I0002'. " REL
  PERFORM f_prepare_output USING ps_order lv_vornr lv_stat.

ENDFORM.