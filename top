*---------------------------------------------------------------------*
* Check order statuses and eligibility (with LKD/UNLKD logic)
*---------------------------------------------------------------------*
FORM f_check_status USING ps_order TYPE viaufkst.

  DATA: lv_obj        TYPE cuobj,
        lv_value      TYPE atwrt,
        lv_vornr      TYPE vornr,
        lv_stat       TYPE jest-stat,
        lv_has_rel    TYPE abap_bool VALUE abap_false,
        lv_has_teco   TYPE abap_bool VALUE abap_false,
        lv_has_lkd    TYPE abap_bool VALUE abap_false,
        lv_has_cmxs   TYPE abap_bool VALUE abap_false,
        lv_has_cmxc   TYPE abap_bool VALUE abap_false,
        lv_lock_date  TYPE udate,
        lv_lock_time  TYPE utime,
        lv_cmxs_date  TYPE udate,
        lv_cmxs_time  TYPE utime,
        lv_objid      TYPE c LENGTH 20.

  "---------------------------------------------------
  " Classification object (equipment or functional location)
  "---------------------------------------------------
  IF ps_order-equnr IS NOT INITIAL.
    SELECT SINGLE cuobj INTO lv_obj FROM inob WHERE objek = ps_order-equnr.
  ELSE.
    SELECT SINGLE cuobj INTO lv_obj FROM inob WHERE objek = ps_order-tplnr.
  ENDIF.
  IF lv_obj IS INITIAL.
    RETURN.
  ENDIF.

  "---------------------------------------------------
  " Detect current system statuses
  "---------------------------------------------------
  DATA lt_status TYPE TABLE OF jest.
  DATA ls_status LIKE LINE OF lt_status.

  SELECT stat, inact
    FROM jest
    INTO TABLE lt_status
    WHERE objnr = ps_order-objnr.

  LOOP AT lt_status INTO ls_status.
    CASE ls_status-stat.
      WHEN 'I0002'. IF ls_status-inact IS INITIAL. lv_has_rel  = abap_true. ENDIF. " REL
      WHEN 'I0045'. IF ls_status-inact IS INITIAL. lv_has_teco = abap_true. ENDIF. " TECO
      WHEN 'I0043'. IF ls_status-inact IS INITIAL. lv_has_lkd  = abap_true. ENDIF. " LKD
      WHEN 'E0014'. IF ls_status-inact IS INITIAL. lv_has_cmxs = abap_true. ENDIF. " CMXS
      WHEN 'E0010'. IF ls_status-inact IS INITIAL. lv_has_cmxc = abap_true. ENDIF. " CMXC
    ENDCASE.
  ENDLOOP.

  "---------------------------------------------------
  " Must have REL or TECO to qualify
  "---------------------------------------------------
  IF lv_has_rel = abap_false AND lv_has_teco = abap_false.
    RETURN.
  ENDIF.

  "---------------------------------------------------
  " Interface characteristic must be CMX
  "---------------------------------------------------
  SELECT SINGLE atwrt INTO lv_value
    FROM ausp
   WHERE objek = lv_obj
     AND atinn = gv_atinn.
  IF sy-subrc <> 0 OR lv_value <> 'CMX'.
    RETURN.
  ENDIF.

  "---------------------------------------------------
  " LKD + no CMXS → skip (Scenario 1)
  "---------------------------------------------------
  IF lv_has_lkd = abap_true AND lv_has_cmxs = abap_false.
    RETURN.
  ENDIF.

  "---------------------------------------------------
  " CMXS exists → check if LKD/UNLKD changed after last send (Scenario 2 & 3)
  "---------------------------------------------------
  IF lv_has_cmxs = abap_true.

    CONCATENATE sy-mandt '30' ps_order-aufnr INTO lv_objid.

    " Last CMXS change timestamp
    SELECT MAX(udate) AS udate, MAX(utime) AS utime
      INTO (lv_cmxs_date, lv_cmxs_time)
      FROM cdhdr
     WHERE objectclas = 'ORDER'
       AND objectid    = lv_objid.
    ENDSELECT.

    " Latest LKD status change timestamp (active/inactive)
    SELECT MAX(udate) AS udate, MAX(utime) AS utime
      INTO (lv_lock_date, lv_lock_time)
      FROM cdhdr
     WHERE objectclas = 'STATUS'
       AND objectid    = ps_order-objnr
       AND ( tcode = 'I0043' OR tcode = 'LOCK' ).
    ENDSELECT.

    " Compare timestamps
    IF ( lv_lock_date IS INITIAL ) OR
       ( lv_lock_date < lv_cmxs_date ) OR
       ( lv_lock_date = lv_cmxs_date AND lv_lock_time <= lv_cmxs_time ).
      RETURN. " No status change since last CMXS send
    ENDIF.
  ENDIF.

  "---------------------------------------------------
  " Determine status to display
  "---------------------------------------------------
  IF lv_has_lkd = abap_true.
    lv_stat = 'I0043'. " Locked
  ELSEIF lv_has_teco = abap_true.
    lv_stat = 'I0045'. " TECO
  ELSE.
    lv_stat = 'I0002'. " REL
  ENDIF.

  "---------------------------------------------------
  " Get first valid operation and prepare output
  "---------------------------------------------------
  PERFORM f_get_operation USING ps_order CHANGING lv_vornr.
  PERFORM f_prepare_output USING ps_order lv_vornr lv_stat.

ENDFORM.