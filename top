*---------------------------------------------------------------------*
* Get ATINN for INTERFACE
*---------------------------------------------------------------------*
FORM f_get_atinn.
  SELECT SINGLE atinn INTO gv_atinn
    FROM cabn
    WHERE atnam = 'INTERFACE'.
  IF sy-subrc <> 0.
    MESSAGE 'Characteristic INTERFACE not found' TYPE 'E'.
  ENDIF.
ENDFORM.

*---------------------------------------------------------------------*
* Fetch candidate orders
*---------------------------------------------------------------------*
FORM f_get_orders.
  " Pull candidate orders
  SELECT * FROM viaufkst
    INTO TABLE gt_orders
    WHERE auart = 'YA07'
      AND auart IN @so_auart
      AND iwerk IN @so_werks
      AND aufnr IN @so_aufnr.

  IF gt_orders IS INITIAL.
    MESSAGE 'No orders found' TYPE 'I'.
  ENDIF.

  " Preload INOB (equipment + functional location objects)
  SELECT objek cuobj
    FROM inob
    INTO TABLE @DATA(lt_inob)
    FOR ALL ENTRIES IN @gt_orders
    WHERE objek = @gt_orders-equnr
       OR objek = @gt_orders-tplnr.

  SORT lt_inob BY objek.

  " Preload AUSP (for INTERFACE char only)
  SELECT objek atinn atwrt
    FROM ausp
    INTO TABLE @DATA(lt_ausp)
    FOR ALL ENTRIES IN @lt_inob
    WHERE objek = @lt_inob-cuobj
      AND atinn = @gv_atinn.

  SORT lt_ausp BY objek.

  " Store preloaded data globally if you want to reuse
  MOVE lt_inob TO gt_inob.
  MOVE lt_ausp TO gt_ausp.

ENDFORM.

*---------------------------------------------------------------------*
* Check order status + eligibility
*---------------------------------------------------------------------*
FORM f_check_status USING ps_order TYPE viaufkst.

  DATA: lv_obj   TYPE cuobj,
        lv_value TYPE atwrt,
        lv_stat  TYPE jest-stat.

  " Classification object (from preload instead of SELECT SINGLE)
  READ TABLE gt_inob INTO DATA(ls_inob)
       WITH KEY objek = ps_order-equnr BINARY SEARCH.
  IF sy-subrc <> 0.
    READ TABLE gt_inob INTO ls_inob
         WITH KEY objek = ps_order-tplnr BINARY SEARCH.
  ENDIF.
  IF sy-subrc <> 0. RETURN. ENDIF.
  lv_obj = ls_inob-cuobj.

  " INTERFACE=CMX?
  READ TABLE gt_ausp INTO DATA(ls_ausp)
       WITH KEY objek = lv_obj BINARY SEARCH.
  IF sy-subrc <> 0 OR ls_ausp-atwrt <> 'CMX'. RETURN. ENDIF.

  " Status check (Released / TECO / Locked active)
  SELECT SINGLE stat
    INTO lv_stat
    FROM jest
   WHERE objnr = ps_order-objnr
     AND stat IN (c_stat_rel, c_stat_teco, c_stat_lkd)
     AND inact = ''.
  IF sy-subrc <> 0. RETURN. ENDIF.

  " Skip if CMXC already
  SELECT SINGLE stat
    INTO lv_stat
    FROM jest
   WHERE objnr = ps_order-objnr
     AND stat = c_stat_cmxc
     AND inact = ''.
  IF sy-subrc = 0. RETURN. ENDIF.

  " Build output row
  PERFORM f_prepare_output USING ps_order lv_stat.

ENDFORM.

*---------------------------------------------------------------------*
* Prepare output for ALV
*---------------------------------------------------------------------*
FORM f_prepare_output USING ps_order TYPE viaufkst
                            pv_stat  TYPE jest-stat.

  CLEAR gs_output.
  gs_output-OrderMessageStatus        = 'CREATE'.
  gs_output-Plant                     = ps_order-iwerk.
  gs_output-MaintenanceOrder          = ps_order-aufnr.
  gs_output-MaintenanceOrderOperation = ''.
  gs_output-MaintOrdBasicStartDate    = ps_order-gstrp.
  gs_output-MaintOrdBasicEndDate      = ps_order-gltrp.
  gs_output-LatestAcceptableComplDate = ps_order-lacd_date.
  gs_output-SystemId                  = sy-sysid.

  SELECT SINGLE txt04
    INTO gs_output-SystemStatusText
    FROM tj02t
   WHERE istat = pv_stat
     AND spras = 'E'.

  IF ps_order-equnr IS NOT INITIAL.
    gs_output-TechnicalObject = ps_order-equnr.
  ELSE.
    gs_output-TechnicalObject = ps_order-tplnr.
  ENDIF.

  APPEND gs_output TO gt_output.

ENDFORM.