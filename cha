*---------------------------------------------------------------------*
* Form  F_CHECK_STATUS
* Check if order should be sent to CMX based on FS logic
*---------------------------------------------------------------------*
FORM f_check_status USING ps_order TYPE viaufkst.

  DATA: lv_objid     TYPE c LENGTH 20,
        lv_date      TYPE sy-datum,
        lv_time      TYPE sy-uzeit,
        lv_stat      TYPE jest-stat,
        lv_atinn     TYPE cabn-atinn,
        lv_atwrt     TYPE ausp-atwrt,
        lv_cuobj     TYPE inob-cuobj,
        lv_changed   TYPE abap_bool VALUE abap_false.

  "-------------------------------------------------------------
  " 1. Skip if order already sent to CMX (CMXS active)
  "-------------------------------------------------------------
  SELECT SINGLE stat
    INTO @lv_stat
    FROM jest
   WHERE objnr = @ps_order-objnr
     AND stat  = @c_stat_cmxs
     AND inact = ''.
  IF sy-subrc = 0.
    RETURN. " Already sent, skip
  ENDIF.

  "-------------------------------------------------------------
  " 2. Check valid system status (REL or TECO)
  "-------------------------------------------------------------
  SELECT SINGLE stat
    INTO @lv_stat
    FROM jest
   WHERE objnr = @ps_order-objnr
     AND stat IN (@c_stat_rel, @c_stat_teco)
     AND inact = ''.
  IF sy-subrc <> 0.
    RETURN. " Not a valid status
  ENDIF.

  "-------------------------------------------------------------
  " 3. Check functional location INTERFACE = 'CMX'
  "-------------------------------------------------------------
  SELECT SINGLE cuobj
    INTO @lv_cuobj
    FROM inob
   WHERE objek = @ps_order-tplnr
     AND klart = '002'.
  IF sy-subrc <> 0.
    RETURN. " No class linkage
  ENDIF.

  SELECT SINGLE atinn
    INTO @lv_atinn
    FROM cabn
   WHERE atnam = 'INTERFACE'.
  IF sy-subrc <> 0.
    RETURN.
  ENDIF.

  SELECT SINGLE atwrt
    INTO @lv_atwrt
    FROM ausp
   WHERE objek = @lv_cuobj
     AND atinn = @lv_atinn
     AND klart = '002'.
  IF sy-subrc <> 0 OR lv_atwrt <> 'CMX'.
    RETURN. " Not CMX interface
  ENDIF.

  "-------------------------------------------------------------
  " 4. Check if order has changed since last run
  "-------------------------------------------------------------
  CONCATENATE sy-mandt '30' ps_order-aufnr INTO lv_objid.

  SELECT SINGLE udate utime
    INTO (lv_date, lv_time)
    FROM cdhdr
   WHERE objectclas = 'ORDER'
     AND objectid    = lv_objid
   ORDER BY udate DESCENDING utime DESCENDING.

  IF sy-subrc = 0.
    " Compare with check from date/time
    IF ( lv_date < so_date-low OR
         ( lv_date = so_date-low AND lv_time < so_time-low ) ).
      RETURN. " No change since last run
    ELSE.
      lv_changed = abap_true.
    ENDIF.
  ELSE.
    lv_changed = abap_true. " New order, must send
  ENDIF.

  "-------------------------------------------------------------
  " 5. Check CMXC and TECO combination logic
  "    (TECO + CMXC means must send)
  "-------------------------------------------------------------
  SELECT SINGLE stat
    INTO @lv_stat
    FROM jest
   WHERE objnr = @ps_order-objnr
     AND stat  = @c_stat_cmx
     AND inact = ''.
  IF sy-subrc = 0 AND lv_stat = @c_stat_cmx.
    " If TECO and CMXC, still send
    SELECT SINGLE stat
      INTO @lv_stat
      FROM jest
     WHERE objnr = @ps_order-objnr
       AND stat  = @c_stat_teco
       AND inact = ''.
    IF sy-subrc = 0.
      lv_changed = abap_true.
    ENDIF.
  ENDIF.

  "-------------------------------------------------------------
  " 6. Send to CMX if all checks pass
  "-------------------------------------------------------------
  IF lv_changed = abap_true.
    PERFORM f_send_cmx USING ps_order.
  ENDIF.

ENDFORM.


*---------------------------------------------------------------------*
* Form  F_GET_OPERATION
* Find the first valid (non-deleted) operation per FS step 7
*---------------------------------------------------------------------*
FORM f_get_operation USING ps_order TYPE viaufkst
                     CHANGING pv_vornr TYPE afvc-vornr.

  DATA: ls_afvc TYPE afvc,
        lv_stat TYPE jest-stat.

  LOOP AT afvc INTO ls_afvc
       WHERE aufpl = ps_order-aufpl
       ORDER BY aplzl.

    " Check if operation is deleted (I0013 active)
    SELECT SINGLE stat
      INTO lv_stat
      FROM jest
     WHERE objnr = ls_afvc-objnr
       AND stat  = 'I0013'
       AND inact = ''.

    IF sy-subrc = 0.
      CONTINUE. " Deleted -> check next operation
    ELSE.
      pv_vornr = ls_afvc-vornr.
      EXIT. " Found valid operation
    ENDIF.

  ENDLOOP.

ENDFORM.