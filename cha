FUNCTION z_in_cmx_calib_result.
*"--------------------------------------------------------------------
*"*"Local Interface:
*"  IMPORTING
*"     VALUE(iv_json_payload) TYPE csequence
*"  EXPORTING
*"     VALUE(ev_status) TYPE char10
*"     VALUE(ev_message) TYPE char255
*"--------------------------------------------------------------------

  DATA: ls_payload TYPE zcmx_calib_result,
        lv_order   TYPE aufnr,
        lv_vornr   TYPE vornr,
        lv_json    TYPE string,
        lv_qmnum   TYPE qmnum,
        ls_qmma    TYPE qmma.

  TRY.
      " Convert to string
      lv_json = iv_json_payload.

      " Parse JSON into structure
      /ui2/cl_json=>deserialize(
        EXPORTING
          json = lv_json
        CHANGING
          data = ls_payload ).

      " Split order and operation
      SPLIT ls_payload-cmx_maintorder_operationnum
        AT '_' INTO lv_order lv_vornr.

      IF lv_order IS INITIAL.
        ev_status  = 'ERROR'.
        ev_message = 'Order number missing in JSON payload'.
        RETURN.
      ENDIF.

      " Find notification number for the order
      SELECT SINGLE qmnum FROM afih
        WHERE aufnr = @lv_order
        INTO @lv_qmnum.

      IF sy-subrc <> 0.
        ev_status  = 'ERROR'.
        ev_message = |No notification found for order { lv_order }|.
        RETURN.
      ENDIF.

      " Update QMMA (e.g., certificate text)
      SELECT SINGLE * FROM qmma
        WHERE qmnum = @lv_qmnum
          AND manum = @lv_vornr
        INTO @ls_qmma.

      IF sy-subrc = 0.
        ls_qmma-matxt = ls_payload-a002_certificate_number.
        ls_qmma-aenam = sy-uname.
        ls_qmma-aedat = sy-datum.
        ls_qmma-aezeit = sy-uzeit.

        MODIFY qmma FROM ls_qmma.
        CALL FUNCTION 'BAPI_TRANSACTION_COMMIT'
          EXPORTING wait = 'X'.

        ev_status  = 'SUCCESS'.
        ev_message = |QMMA updated for order { lv_order } with certificate { ls_payload-a002_certificate_number }|.
      ELSE.
        ev_status  = 'ERROR'.
        ev_message = |No QMMA record found for order { lv_order } operation { lv_vornr }|.
      ENDIF.

    CATCH cx_root INTO DATA(lx_err).
      ev_status  = 'ERROR'.
      ev_message = lx_err->get_text( ).
  ENDTRY.

ENDFUNCTION.