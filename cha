FORM display_alv .

  DATA: lo_alv        TYPE REF TO cl_salv_table,
        lo_columns    TYPE REF TO cl_salv_columns_table,
        lo_column     TYPE REF TO cl_salv_column_table,
        lo_functions  TYPE REF TO cl_salv_functions_list,
        lo_display    TYPE REF TO cl_salv_display_settings,
        lo_aggregs    TYPE REF TO cl_salv_aggregations,
        lo_agg        TYPE REF TO cl_salv_aggregation.

  TRY.
      " Create SALV object (simple ALV, no container)
      cl_salv_table=>factory(
        IMPORTING
          r_salv_table = lo_alv
        CHANGING
          t_table      = lt_alv_display ).

      " ===== Display settings (title, zebra, etc.)
      lo_display = lo_alv->get_display_settings( ).
      lo_display->set_list_header( |Report { sy-repid } - ALV Output| ).
      lo_display->set_striped_pattern( abap_true ).

      " ===== Enable ALV toolbar
      lo_functions = lo_alv->get_functions( ).
      lo_functions->set_all( abap_true ).

      " ===== Optimize column width
      lo_columns = lo_alv->get_columns( ).
      lo_columns->set_optimize( abap_true ).

      " ===== Rename a specific column (if exists)
      TRY.
          lo_column = lo_columns->get_column( 'BETR1' ).
          lo_column->set_short_text( 'Amount' ).
          lo_column->set_medium_text( 'Amount' ).
          lo_column->set_long_text( 'Amount in Local Currency' ).
        CATCH cx_salv_not_found.
      ENDTRY.

      " ===== Add automatic totals for numeric column(s)
      lo_aggregs = lo_alv->get_aggregations( ).
      TRY.
          lo_aggregs->add_aggregation( 'BETR1' ).
        CATCH cx_salv_data_error.
      ENDTRY.

      " ===== Finally, display ALV
      lo_alv->display( ).

    CATCH cx_salv_msg INTO DATA(lx).
      MESSAGE lx->get_text( ) TYPE 'E'.
    CATCH cx_root INTO DATA(lx2).
      MESSAGE lx2->get_text( ) TYPE 'E'.
  ENDTRY.

ENDFORM.