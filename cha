FORM display_alv.

  DATA: lv_title     TYPE lvc_title,
        lo_columns   TYPE REF TO cl_salv_columns_table,
        lo_column    TYPE REF TO cl_salv_column_table,
        lo_functions TYPE REF TO cl_salv_functions_list,
        lo_display   TYPE REF TO cl_salv_display_settings.

  IF lt_alv_display IS INITIAL.
    MESSAGE 'No data to display.' TYPE 'I'.
    RETURN.
  ENDIF.

  TRY.
      " Create SALV object
      CALL METHOD cl_salv_table=>factory
        IMPORTING
          r_salv_table = lo_alv
        CHANGING
          t_table      = lt_alv_display.

      " --- Set ALV Title using top-of-list
      lv_title = |Report { sy-repid } - ALV Output|.
      CALL METHOD lo_alv->set_top_of_list
        EXPORTING
          value = lv_title.

      " --- Column settings
      CALL METHOD lo_alv->get_columns
        RECEIVING
          value = lo_columns.

      CALL METHOD lo_columns->set_optimize
        EXPORTING
          value = abap_true.

      " --- Rename column 'BETR1' (if exists)
      TRY.
          CALL METHOD lo_columns->get_column
            EXPORTING
              columnname = 'BETR1'
            RECEIVING
              column      = lo_column.

          CALL METHOD lo_column->set_short_text
            EXPORTING
              value = 'Amount'.

          CALL METHOD lo_column->set_medium_text
            EXPORTING
              value = 'Amount'.

          CALL METHOD lo_column->set_long_text
            EXPORTING
              value = 'Amount in Local Currency'.
        CATCH cx_salv_not_found.
      ENDTRY.

      " --- Enable all toolbar functions
      CALL METHOD lo_alv->get_functions
        RECEIVING
          value = lo_functions.

      CALL METHOD lo_functions->set_all
        EXPORTING
          value = abap_true.

      " --- Display ALV
      CALL METHOD lo_alv->display.

    CATCH cx_salv_msg INTO DATA(lx).
      MESSAGE lx->get_text( ) TYPE 'E'.
    CATCH cx_root INTO DATA(lx2).
      MESSAGE lx2->get_text( ) TYPE 'E'.
  ENDTRY.

ENDFORM.