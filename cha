*---------------------------------------------------------------------*
*  FORM: POST_NOTIF_ACTIVITY
*  PURPOSE: Add calibration activities to notification (S/4HANA compatible)
*---------------------------------------------------------------------*
FORM post_notif_activity USING    ps_result TYPE ty_result
                         CHANGING pv_error  TYPE string.

  DATA: lt_act    TYPE TABLE OF bapi2080_act_item,
        ls_act    TYPE bapi2080_act_item,
        lt_return TYPE TABLE OF bapiret2,
        ls_return TYPE bapiret2.

  CLEAR: pv_error.

  "--------------------------------------------------------------------"
  " Activity 0001: Calibration Passed/Failed
  "--------------------------------------------------------------------"
  CLEAR ls_act.
  ls_act-act_codegrp = 'CMX-CONF'.
  ls_act-act_code    = '0001'.
  ls_act-act_text    = COND #( WHEN ps_result-calib_passed = 'X'
                               THEN 'TRUE'
                               ELSE 'FALSE' ).
  APPEND ls_act TO lt_act.

  "--------------------------------------------------------------------"
  " Activity A002: Calibration Certificate Number
  "--------------------------------------------------------------------"
  CLEAR ls_act.
  ls_act-act_codegrp = 'CMX-CONF'.
  ls_act-act_code    = 'A002'.
  ls_act-act_text    = ps_result-calib_cert_no.
  APPEND ls_act TO lt_act.

  "--------------------------------------------------------------------"
  " Activity B002: Calibration Date/Time
  "--------------------------------------------------------------------"
  CLEAR ls_act.
  ls_act-act_codegrp = 'CMX-CONF'.
  ls_act-act_code    = 'B002'.
  ls_act-act_text    = ps_result-calib_date_time.
  APPEND ls_act TO lt_act.

  "--------------------------------------------------------------------"
  " Call BAPI to add activities to Notification
  "--------------------------------------------------------------------"
  CALL FUNCTION 'BAPI_ALM_NOTIF_DATA_ADD'
    EXPORTING
      number   = ps_result-notif_no
    TABLES
      activity = lt_act
      return   = lt_return.

  "--------------------------------------------------------------------"
  " Check for Errors
  "--------------------------------------------------------------------"
  READ TABLE lt_return WITH KEY type = 'E' INTO ls_return.
  IF sy-subrc = 0.
    pv_error = |Notification Activity Error: { ls_return-message }|.
    CALL FUNCTION 'BAPI_TRANSACTION_ROLLBACK'.
    RETURN.
  ENDIF.

  "--------------------------------------------------------------------"
  " Save the notification changes
  "--------------------------------------------------------------------"
  CALL FUNCTION 'BAPI_ALM_NOTIF_SAVE'
    EXPORTING
      number = ps_result-notif_no
    TABLES
      return = lt_return.

  READ TABLE lt_return WITH KEY type = 'E' INTO ls_return.
  IF sy-subrc = 0.
    pv_error = |Notification Save Error: { ls_return-message }|.
    CALL FUNCTION 'BAPI_TRANSACTION_ROLLBACK'.
    RETURN.
  ENDIF.

  "--------------------------------------------------------------------"
  " Commit work
  "--------------------------------------------------------------------"
  CALL FUNCTION 'BAPI_TRANSACTION_COMMIT'
    EXPORTING
      wait = 'X'.

ENDFORM.