FUNCTION z_in_cmx_calib_result.
*"--------------------------------------------------------------------
*"*"Local Interface:
*"  IMPORTING
*"     VALUE(iv_json_payload) TYPE csequence
*"  EXPORTING
*"     VALUE(ev_status) TYPE char10
*"     VALUE(ev_message) TYPE char255
*"--------------------------------------------------------------------

  DATA: ls_payload TYPE zcmx_calib_result,
        lv_order   TYPE aufnr,
        lv_vornr   TYPE vornr.

  TRY.
      " 1️⃣ Parse JSON to ABAP structure
      /ui2/cl_json=>deserialize(
        EXPORTING
          json = iv_json_payload
        CHANGING
          data = ls_payload ).

      " 2️⃣ Split order + operation (e.g. 000035215282_0010)
      SPLIT ls_payload-cmx_maintorder_operationnum
        AT '_' INTO lv_order lv_vornr.

      " 3️⃣ Validate input
      IF lv_order IS INITIAL.
        ev_status  = 'ERROR'.
        ev_message = 'Order number missing in JSON payload'.
        RETURN.
      ENDIF.

      " 4️⃣ TODO: Add QMMA or order update logic here later
      WRITE: / 'Simulated update for order:', lv_order, 'operation:', lv_vornr.

      " 5️⃣ Commit (if DB update)
      CALL FUNCTION 'BAPI_TRANSACTION_COMMIT'
        EXPORTING
          wait = 'X'.

      ev_status  = 'SUCCESS'.
      ev_message = |Calibration data for order { lv_order } processed.|.

    CATCH cx_root INTO DATA(lx_err).
      ev_status  = 'ERROR'.
      ev_message = lx_err->get_text( ).
  ENDTRY.

ENDFUNCTION.