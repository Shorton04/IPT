FORM display_alv .

  DATA: lo_alv        TYPE REF TO cl_salv_table,
        lo_columns    TYPE REF TO cl_salv_columns_table,
        lo_column     TYPE REF TO cl_salv_column,
        lo_functions  TYPE REF TO cl_salv_functions_list,
        lo_display    TYPE REF TO cl_salv_display_settings,
        lo_aggregs    TYPE REF TO cl_salv_aggregations.

  TRY.
      cl_salv_table=>factory(
        IMPORTING
          r_salv_table = lo_alv
        CHANGING
          t_table      = gt_alv ).

      " Display settings
      lo_display = lo_alv->get_display_settings( ).
      lo_display->set_list_header( 'FAGLFLEXT â†’ HFM Report Output' ).
      lo_display->set_striped_pattern( abap_true ).

      " Enable all ALV functions
      lo_functions = lo_alv->get_functions( ).
      lo_functions->set_all( abap_true ).

      " Optimize columns
      lo_columns = lo_alv->get_columns( ).
      lo_columns->set_optimize( abap_true ).

      " Set column text for BETR1 (Amount)
      TRY.
          DATA(lo_column) = lo_columns->get_column( columnname = 'BETR1' ).
          lo_column->set_short_text( 'Amount' ).
          lo_column->set_medium_text( 'Amount' ).
          lo_column->set_long_text( 'Balance Amount' ).
        CATCH cx_salv_not_found.
      ENDTRY.

      " Add total for BETR1
      lo_aggregs = lo_alv->get_aggregations( ).
      TRY.
          lo_aggregs->add_aggregation( 'BETR1' ).
        CATCH cx_salv_data_error.
      ENDTRY.

      lo_alv->display( ).

    CATCH cx_root INTO DATA(lx).
      MESSAGE lx->get_text( ) TYPE 'E'.
  ENDTRY.

ENDFORM.